// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "yula/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// ChatRepository is an autogenerated mock type for the ChatRepository type
type ChatRepository struct {
	mock.Mock
}

// DeleteDialog provides a mock function with given fields: dialog
func (_m *ChatRepository) DeleteDialog(dialog *models.IDialog) error {
	ret := _m.Called(dialog)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.IDialog) error); ok {
		r0 = rf(dialog)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteMessages provides a mock function with given fields: iMessage
func (_m *ChatRepository) DeleteMessages(iMessage *models.IMessage) error {
	ret := _m.Called(iMessage)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.IMessage) error); ok {
		r0 = rf(iMessage)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InsertDialog provides a mock function with given fields: dialog
func (_m *ChatRepository) InsertDialog(dialog *models.Dialog) error {
	ret := _m.Called(dialog)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Dialog) error); ok {
		r0 = rf(dialog)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InsertMessage provides a mock function with given fields: message
func (_m *ChatRepository) InsertMessage(message *models.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SelectAllDialogs provides a mock function with given fields: id1
func (_m *ChatRepository) SelectAllDialogs(id1 int64) ([]*models.Dialog, error) {
	ret := _m.Called(id1)

	var r0 []*models.Dialog
	if rf, ok := ret.Get(0).(func(int64) []*models.Dialog); ok {
		r0 = rf(id1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Dialog)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SelectDialog provides a mock function with given fields: iDialog
func (_m *ChatRepository) SelectDialog(iDialog *models.IDialog) (*models.Dialog, error) {
	ret := _m.Called(iDialog)

	var r0 *models.Dialog
	if rf, ok := ret.Get(0).(func(*models.IDialog) *models.Dialog); ok {
		r0 = rf(iDialog)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Dialog)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.IDialog) error); ok {
		r1 = rf(iDialog)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SelectMessages provides a mock function with given fields: iMessage, offset, limit
func (_m *ChatRepository) SelectMessages(iMessage *models.IMessage, offset int64, limit int64) ([]*models.Message, error) {
	ret := _m.Called(iMessage, offset, limit)

	var r0 []*models.Message
	if rf, ok := ret.Get(0).(func(*models.IMessage, int64, int64) []*models.Message); ok {
		r0 = rf(iMessage, offset, limit)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.IMessage, int64, int64) error); ok {
		r1 = rf(iMessage, offset, limit)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
