// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonA66148a6DecodeYulaInternalModels(in *jlexer.Lexer, out *Promotion) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "advert_id":
			out.AdvertId = int64(in.Int64())
		case "promo_level":
			out.PromoLevel = int64(in.Int64())
		case "promo_updated":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.UpdateTime).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA66148a6EncodeYulaInternalModels(out *jwriter.Writer, in Promotion) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"advert_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AdvertId))
	}
	{
		const prefix string = ",\"promo_level\":"
		out.RawString(prefix)
		out.Int64(int64(in.PromoLevel))
	}
	{
		const prefix string = ",\"promo_updated\":"
		out.RawString(prefix)
		out.Raw((in.UpdateTime).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Promotion) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA66148a6EncodeYulaInternalModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Promotion) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA66148a6EncodeYulaInternalModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Promotion) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA66148a6DecodeYulaInternalModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Promotion) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA66148a6DecodeYulaInternalModels(l, v)
}
func easyjsonA66148a6DecodeYulaInternalModels1(in *jlexer.Lexer, out *Page) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "PageNum":
			out.PageNum = int64(in.Int64())
		case "Count":
			out.Count = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA66148a6EncodeYulaInternalModels1(out *jwriter.Writer, in Page) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"PageNum\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.PageNum))
	}
	{
		const prefix string = ",\"Count\":"
		out.RawString(prefix)
		out.Int64(int64(in.Count))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Page) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA66148a6EncodeYulaInternalModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Page) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA66148a6EncodeYulaInternalModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Page) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA66148a6DecodeYulaInternalModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Page) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA66148a6DecodeYulaInternalModels1(l, v)
}
func easyjsonA66148a6DecodeYulaInternalModels2(in *jlexer.Lexer, out *AdvertShort) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "price":
			out.Price = int(in.Int())
		case "location":
			out.Location = string(in.String())
		case "image":
			out.Image = string(in.String())
		case "promo_level":
			out.PromoLevel = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA66148a6EncodeYulaInternalModels2(out *jwriter.Writer, in AdvertShort) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Int(int(in.Price))
	}
	{
		const prefix string = ",\"location\":"
		out.RawString(prefix)
		out.String(string(in.Location))
	}
	{
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.String(string(in.Image))
	}
	{
		const prefix string = ",\"promo_level\":"
		out.RawString(prefix)
		out.Int64(int64(in.PromoLevel))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AdvertShort) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA66148a6EncodeYulaInternalModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AdvertShort) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA66148a6EncodeYulaInternalModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AdvertShort) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA66148a6DecodeYulaInternalModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AdvertShort) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA66148a6DecodeYulaInternalModels2(l, v)
}
func easyjsonA66148a6DecodeYulaInternalModels3(in *jlexer.Lexer, out *AdvertPrice) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "advert_id":
			out.AdvertId = int64(in.Int64())
		case "price":
			out.Price = int64(in.Int64())
		case "change_time":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ChangeTime).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA66148a6EncodeYulaInternalModels3(out *jwriter.Writer, in AdvertPrice) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"advert_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AdvertId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Int64(int64(in.Price))
	}
	{
		const prefix string = ",\"change_time\":"
		out.RawString(prefix)
		out.Raw((in.ChangeTime).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AdvertPrice) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA66148a6EncodeYulaInternalModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AdvertPrice) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA66148a6EncodeYulaInternalModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AdvertPrice) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA66148a6DecodeYulaInternalModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AdvertPrice) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA66148a6DecodeYulaInternalModels3(l, v)
}
func easyjsonA66148a6DecodeYulaInternalModels4(in *jlexer.Lexer, out *AdvertImages) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "images":
			if in.IsNull() {
				in.Skip()
				out.ImagesPath = nil
			} else {
				in.Delim('[')
				if out.ImagesPath == nil {
					if !in.IsDelim(']') {
						out.ImagesPath = make([]string, 0, 4)
					} else {
						out.ImagesPath = []string{}
					}
				} else {
					out.ImagesPath = (out.ImagesPath)[:0]
				}
				for !in.IsDelim(']') {
					var v1 string
					v1 = string(in.String())
					out.ImagesPath = append(out.ImagesPath, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA66148a6EncodeYulaInternalModels4(out *jwriter.Writer, in AdvertImages) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"images\":"
		out.RawString(prefix[1:])
		if in.ImagesPath == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.ImagesPath {
				if v2 > 0 {
					out.RawByte(',')
				}
				out.String(string(v3))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AdvertImages) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA66148a6EncodeYulaInternalModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AdvertImages) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA66148a6EncodeYulaInternalModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AdvertImages) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA66148a6DecodeYulaInternalModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AdvertImages) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA66148a6DecodeYulaInternalModels4(l, v)
}
func easyjsonA66148a6DecodeYulaInternalModels5(in *jlexer.Lexer, out *Advert) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "price":
			out.Price = int(in.Int())
		case "location":
			out.Location = string(in.String())
		case "latitude":
			out.Latitude = float64(in.Float64())
		case "longitude":
			out.Longitude = float64(in.Float64())
		case "published_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.PublishedAt).UnmarshalJSON(data))
			}
		case "date_close":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.DateClose).UnmarshalJSON(data))
			}
		case "is_active":
			out.IsActive = bool(in.Bool())
		case "publisher_id":
			out.PublisherId = int64(in.Int64())
		case "category":
			out.Category = string(in.String())
		case "images":
			if in.IsNull() {
				in.Skip()
				out.Images = nil
			} else {
				in.Delim('[')
				if out.Images == nil {
					if !in.IsDelim(']') {
						out.Images = make([]string, 0, 4)
					} else {
						out.Images = []string{}
					}
				} else {
					out.Images = (out.Images)[:0]
				}
				for !in.IsDelim(']') {
					var v4 string
					v4 = string(in.String())
					out.Images = append(out.Images, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "views":
			out.Views = int64(in.Int64())
		case "amount":
			out.Amount = int64(in.Int64())
		case "is_new":
			out.IsNew = bool(in.Bool())
		case "promo_level":
			out.PromoLevel = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA66148a6EncodeYulaInternalModels5(out *jwriter.Writer, in Advert) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Int(int(in.Price))
	}
	{
		const prefix string = ",\"location\":"
		out.RawString(prefix)
		out.String(string(in.Location))
	}
	{
		const prefix string = ",\"latitude\":"
		out.RawString(prefix)
		out.Float64(float64(in.Latitude))
	}
	{
		const prefix string = ",\"longitude\":"
		out.RawString(prefix)
		out.Float64(float64(in.Longitude))
	}
	{
		const prefix string = ",\"published_at\":"
		out.RawString(prefix)
		out.Raw((in.PublishedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"date_close\":"
		out.RawString(prefix)
		out.Raw((in.DateClose).MarshalJSON())
	}
	{
		const prefix string = ",\"is_active\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsActive))
	}
	{
		const prefix string = ",\"publisher_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.PublisherId))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"images\":"
		out.RawString(prefix)
		if in.Images == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Images {
				if v5 > 0 {
					out.RawByte(',')
				}
				out.String(string(v6))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"views\":"
		out.RawString(prefix)
		out.Int64(int64(in.Views))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Int64(int64(in.Amount))
	}
	{
		const prefix string = ",\"is_new\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsNew))
	}
	{
		const prefix string = ",\"promo_level\":"
		out.RawString(prefix)
		out.Int64(int64(in.PromoLevel))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Advert) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA66148a6EncodeYulaInternalModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Advert) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA66148a6EncodeYulaInternalModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Advert) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA66148a6DecodeYulaInternalModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Advert) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA66148a6DecodeYulaInternalModels5(l, v)
}
