// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonCd7c0adaDecodeYulaInternalModels(in *jlexer.Lexer, out *HttpError) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels(out *jwriter.Writer, in HttpError) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpError) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpError) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpError) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpError) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels1(in *jlexer.Lexer, out *HttpDialog) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64())
		case "name":
			out.Name = string(in.String())
		case "surname":
			out.Surname = string(in.String())
		case "adv_info":
			(out.Adv).UnmarshalEasyJSON(in)
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels1(out *jwriter.Writer, in HttpDialog) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"surname\":"
		out.RawString(prefix)
		out.String(string(in.Surname))
	}
	{
		const prefix string = ",\"adv_info\":"
		out.RawString(prefix)
		(in.Adv).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpDialog) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpDialog) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpDialog) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpDialog) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels1(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels2(in *jlexer.Lexer, out *HttpBodySalesmanPage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "salesman":
			easyjsonCd7c0adaDecodeYulaInternalModels3(in, &out.Salesman)
		case "adverts":
			if in.IsNull() {
				in.Skip()
				out.Adverts = nil
			} else {
				in.Delim('[')
				if out.Adverts == nil {
					if !in.IsDelim(']') {
						out.Adverts = make([]*AdvertShort, 0, 8)
					} else {
						out.Adverts = []*AdvertShort{}
					}
				} else {
					out.Adverts = (out.Adverts)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *AdvertShort
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(AdvertShort)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					out.Adverts = append(out.Adverts, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "rating":
			easyjsonCd7c0adaDecodeYulaInternalModels4(in, &out.Rating)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels2(out *jwriter.Writer, in HttpBodySalesmanPage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"salesman\":"
		out.RawString(prefix[1:])
		easyjsonCd7c0adaEncodeYulaInternalModels3(out, in.Salesman)
	}
	{
		const prefix string = ",\"adverts\":"
		out.RawString(prefix)
		if in.Adverts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Adverts {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					(*v3).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"rating\":"
		out.RawString(prefix)
		easyjsonCd7c0adaEncodeYulaInternalModels4(out, in.Rating)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodySalesmanPage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodySalesmanPage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodySalesmanPage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodySalesmanPage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels2(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels4(in *jlexer.Lexer, out *RatingStat) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "sum":
			out.RatingSum = int64(in.Int64())
		case "count":
			out.RatingCount = int64(in.Int64())
		case "avg":
			out.RatingAvg = float32(in.Float32())
		case "rate":
			out.PersonalRate = int(in.Int())
		case "is_rated":
			out.IsRated = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels4(out *jwriter.Writer, in RatingStat) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"sum\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.RatingSum))
	}
	{
		const prefix string = ",\"count\":"
		out.RawString(prefix)
		out.Int64(int64(in.RatingCount))
	}
	{
		const prefix string = ",\"avg\":"
		out.RawString(prefix)
		out.Float32(float32(in.RatingAvg))
	}
	{
		const prefix string = ",\"rate\":"
		out.RawString(prefix)
		out.Int(int(in.PersonalRate))
	}
	{
		const prefix string = ",\"is_rated\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsRated))
	}
	out.RawByte('}')
}
func easyjsonCd7c0adaDecodeYulaInternalModels3(in *jlexer.Lexer, out *Profile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64())
		case "email":
			out.Email = string(in.String())
		case "phone":
			out.Phone = string(in.String())
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		case "name":
			out.Name = string(in.String())
		case "surname":
			out.Surname = string(in.String())
		case "image":
			out.Image = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels3(out *jwriter.Writer, in Profile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Id))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.String(string(in.Phone))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"surname\":"
		out.RawString(prefix)
		out.String(string(in.Surname))
	}
	{
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.String(string(in.Image))
	}
	out.RawByte('}')
}
func easyjsonCd7c0adaDecodeYulaInternalModels5(in *jlexer.Lexer, out *HttpBodyProfile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "profile":
			easyjsonCd7c0adaDecodeYulaInternalModels3(in, &out.Profile)
		case "rating":
			easyjsonCd7c0adaDecodeYulaInternalModels4(in, &out.Rating)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels5(out *jwriter.Writer, in HttpBodyProfile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"profile\":"
		out.RawString(prefix[1:])
		easyjsonCd7c0adaEncodeYulaInternalModels3(out, in.Profile)
	}
	{
		const prefix string = ",\"rating\":"
		out.RawString(prefix)
		easyjsonCd7c0adaEncodeYulaInternalModels4(out, in.Rating)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyProfile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyProfile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyProfile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyProfile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels5(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels6(in *jlexer.Lexer, out *HttpBodyPriceHistory) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "history":
			if in.IsNull() {
				in.Skip()
				out.History = nil
			} else {
				in.Delim('[')
				if out.History == nil {
					if !in.IsDelim(']') {
						out.History = make([]*AdvertPrice, 0, 8)
					} else {
						out.History = []*AdvertPrice{}
					}
				} else {
					out.History = (out.History)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *AdvertPrice
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(AdvertPrice)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.History = append(out.History, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels6(out *jwriter.Writer, in HttpBodyPriceHistory) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"history\":"
		out.RawString(prefix[1:])
		if in.History == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.History {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyPriceHistory) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyPriceHistory) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyPriceHistory) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyPriceHistory) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels6(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels7(in *jlexer.Lexer, out *HttpBodyOrder) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "salesman":
			easyjsonCd7c0adaDecodeYulaInternalModels3(in, &out.Salesman)
		case "order":
			(out.Order).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels7(out *jwriter.Writer, in HttpBodyOrder) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"salesman\":"
		out.RawString(prefix[1:])
		easyjsonCd7c0adaEncodeYulaInternalModels3(out, in.Salesman)
	}
	{
		const prefix string = ",\"order\":"
		out.RawString(prefix)
		(in.Order).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyOrder) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyOrder) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyOrder) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyOrder) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels7(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels8(in *jlexer.Lexer, out *HttpBodyInterface) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "body":
			if m, ok := out.Body.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Body.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Body = in.Interface()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels8(out *jwriter.Writer, in HttpBodyInterface) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix)
		if m, ok := in.Body.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Body.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Body))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyInterface) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyInterface) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyInterface) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyInterface) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels8(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels9(in *jlexer.Lexer, out *HttpBodyDialogs) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "dialogs":
			if in.IsNull() {
				in.Skip()
				out.Dialogs = nil
			} else {
				in.Delim('[')
				if out.Dialogs == nil {
					if !in.IsDelim(']') {
						out.Dialogs = make([]*HttpDialog, 0, 8)
					} else {
						out.Dialogs = []*HttpDialog{}
					}
				} else {
					out.Dialogs = (out.Dialogs)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *HttpDialog
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(HttpDialog)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Dialogs = append(out.Dialogs, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels9(out *jwriter.Writer, in HttpBodyDialogs) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"dialogs\":"
		out.RawString(prefix[1:])
		if in.Dialogs == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Dialogs {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyDialogs) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyDialogs) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyDialogs) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyDialogs) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels9(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels10(in *jlexer.Lexer, out *HttpBodyChatHistory) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "messages":
			if in.IsNull() {
				in.Skip()
				out.Messages = nil
			} else {
				in.Delim('[')
				if out.Messages == nil {
					if !in.IsDelim(']') {
						out.Messages = make([]*Message, 0, 8)
					} else {
						out.Messages = []*Message{}
					}
				} else {
					out.Messages = (out.Messages)[:0]
				}
				for !in.IsDelim(']') {
					var v10 *Message
					if in.IsNull() {
						in.Skip()
						v10 = nil
					} else {
						if v10 == nil {
							v10 = new(Message)
						}
						(*v10).UnmarshalEasyJSON(in)
					}
					out.Messages = append(out.Messages, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels10(out *jwriter.Writer, in HttpBodyChatHistory) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"messages\":"
		out.RawString(prefix[1:])
		if in.Messages == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Messages {
				if v11 > 0 {
					out.RawByte(',')
				}
				if v12 == nil {
					out.RawString("null")
				} else {
					(*v12).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyChatHistory) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyChatHistory) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyChatHistory) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyChatHistory) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels10(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels11(in *jlexer.Lexer, out *HttpBodyCategories) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "categories":
			if in.IsNull() {
				in.Skip()
				out.Categories = nil
			} else {
				in.Delim('[')
				if out.Categories == nil {
					if !in.IsDelim(']') {
						out.Categories = make([]*Category, 0, 8)
					} else {
						out.Categories = []*Category{}
					}
				} else {
					out.Categories = (out.Categories)[:0]
				}
				for !in.IsDelim(']') {
					var v13 *Category
					if in.IsNull() {
						in.Skip()
						v13 = nil
					} else {
						if v13 == nil {
							v13 = new(Category)
						}
						(*v13).UnmarshalEasyJSON(in)
					}
					out.Categories = append(out.Categories, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels11(out *jwriter.Writer, in HttpBodyCategories) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"categories\":"
		out.RawString(prefix[1:])
		if in.Categories == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.Categories {
				if v14 > 0 {
					out.RawByte(',')
				}
				if v15 == nil {
					out.RawString("null")
				} else {
					(*v15).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyCategories) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyCategories) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyCategories) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyCategories) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels11(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels12(in *jlexer.Lexer, out *HttpBodyCartAll) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cart":
			if in.IsNull() {
				in.Skip()
				out.Cart = nil
			} else {
				in.Delim('[')
				if out.Cart == nil {
					if !in.IsDelim(']') {
						out.Cart = make([]*Cart, 0, 8)
					} else {
						out.Cart = []*Cart{}
					}
				} else {
					out.Cart = (out.Cart)[:0]
				}
				for !in.IsDelim(']') {
					var v16 *Cart
					if in.IsNull() {
						in.Skip()
						v16 = nil
					} else {
						if v16 == nil {
							v16 = new(Cart)
						}
						(*v16).UnmarshalEasyJSON(in)
					}
					out.Cart = append(out.Cart, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "adverts":
			if in.IsNull() {
				in.Skip()
				out.Adverts = nil
			} else {
				in.Delim('[')
				if out.Adverts == nil {
					if !in.IsDelim(']') {
						out.Adverts = make([]*Advert, 0, 8)
					} else {
						out.Adverts = []*Advert{}
					}
				} else {
					out.Adverts = (out.Adverts)[:0]
				}
				for !in.IsDelim(']') {
					var v17 *Advert
					if in.IsNull() {
						in.Skip()
						v17 = nil
					} else {
						if v17 == nil {
							v17 = new(Advert)
						}
						(*v17).UnmarshalEasyJSON(in)
					}
					out.Adverts = append(out.Adverts, v17)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "hints":
			if in.IsNull() {
				in.Skip()
				out.Hints = nil
			} else {
				in.Delim('[')
				if out.Hints == nil {
					if !in.IsDelim(']') {
						out.Hints = make([]string, 0, 4)
					} else {
						out.Hints = []string{}
					}
				} else {
					out.Hints = (out.Hints)[:0]
				}
				for !in.IsDelim(']') {
					var v18 string
					v18 = string(in.String())
					out.Hints = append(out.Hints, v18)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels12(out *jwriter.Writer, in HttpBodyCartAll) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cart\":"
		out.RawString(prefix[1:])
		if in.Cart == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v19, v20 := range in.Cart {
				if v19 > 0 {
					out.RawByte(',')
				}
				if v20 == nil {
					out.RawString("null")
				} else {
					(*v20).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"adverts\":"
		out.RawString(prefix)
		if in.Adverts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v21, v22 := range in.Adverts {
				if v21 > 0 {
					out.RawByte(',')
				}
				if v22 == nil {
					out.RawString("null")
				} else {
					(*v22).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"hints\":"
		out.RawString(prefix)
		if in.Hints == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v23, v24 := range in.Hints {
				if v23 > 0 {
					out.RawByte(',')
				}
				out.String(string(v24))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyCartAll) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyCartAll) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyCartAll) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyCartAll) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels12(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels13(in *jlexer.Lexer, out *HttpBodyCart) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cart":
			if in.IsNull() {
				in.Skip()
				out.Cart = nil
			} else {
				in.Delim('[')
				if out.Cart == nil {
					if !in.IsDelim(']') {
						out.Cart = make([]*Cart, 0, 8)
					} else {
						out.Cart = []*Cart{}
					}
				} else {
					out.Cart = (out.Cart)[:0]
				}
				for !in.IsDelim(']') {
					var v25 *Cart
					if in.IsNull() {
						in.Skip()
						v25 = nil
					} else {
						if v25 == nil {
							v25 = new(Cart)
						}
						(*v25).UnmarshalEasyJSON(in)
					}
					out.Cart = append(out.Cart, v25)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "adverts":
			if in.IsNull() {
				in.Skip()
				out.Adverts = nil
			} else {
				in.Delim('[')
				if out.Adverts == nil {
					if !in.IsDelim(']') {
						out.Adverts = make([]*Advert, 0, 8)
					} else {
						out.Adverts = []*Advert{}
					}
				} else {
					out.Adverts = (out.Adverts)[:0]
				}
				for !in.IsDelim(']') {
					var v26 *Advert
					if in.IsNull() {
						in.Skip()
						v26 = nil
					} else {
						if v26 == nil {
							v26 = new(Advert)
						}
						(*v26).UnmarshalEasyJSON(in)
					}
					out.Adverts = append(out.Adverts, v26)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels13(out *jwriter.Writer, in HttpBodyCart) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cart\":"
		out.RawString(prefix[1:])
		if in.Cart == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v27, v28 := range in.Cart {
				if v27 > 0 {
					out.RawByte(',')
				}
				if v28 == nil {
					out.RawString("null")
				} else {
					(*v28).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"adverts\":"
		out.RawString(prefix)
		if in.Adverts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v29, v30 := range in.Adverts {
				if v29 > 0 {
					out.RawByte(',')
				}
				if v30 == nil {
					out.RawString("null")
				} else {
					(*v30).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyCart) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyCart) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyCart) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyCart) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels13(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels14(in *jlexer.Lexer, out *HttpBodyAdverts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "adverts":
			if in.IsNull() {
				in.Skip()
				out.Advert = nil
			} else {
				in.Delim('[')
				if out.Advert == nil {
					if !in.IsDelim(']') {
						out.Advert = make([]*Advert, 0, 8)
					} else {
						out.Advert = []*Advert{}
					}
				} else {
					out.Advert = (out.Advert)[:0]
				}
				for !in.IsDelim(']') {
					var v31 *Advert
					if in.IsNull() {
						in.Skip()
						v31 = nil
					} else {
						if v31 == nil {
							v31 = new(Advert)
						}
						(*v31).UnmarshalEasyJSON(in)
					}
					out.Advert = append(out.Advert, v31)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels14(out *jwriter.Writer, in HttpBodyAdverts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"adverts\":"
		out.RawString(prefix[1:])
		if in.Advert == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v32, v33 := range in.Advert {
				if v32 > 0 {
					out.RawByte(',')
				}
				if v33 == nil {
					out.RawString("null")
				} else {
					(*v33).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyAdverts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyAdverts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyAdverts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyAdverts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels14(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels15(in *jlexer.Lexer, out *HttpBodyAdvertShort) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "advert":
			(out.AdvertShort).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels15(out *jwriter.Writer, in HttpBodyAdvertShort) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"advert\":"
		out.RawString(prefix[1:])
		(in.AdvertShort).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyAdvertShort) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyAdvertShort) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyAdvertShort) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyAdvertShort) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels15(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels16(in *jlexer.Lexer, out *HttpBodyAdvertDetail) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "advert":
			(out.Advert).UnmarshalEasyJSON(in)
		case "salesman":
			easyjsonCd7c0adaDecodeYulaInternalModels3(in, &out.Salesman)
		case "rating":
			easyjsonCd7c0adaDecodeYulaInternalModels4(in, &out.Rating)
		case "price_history":
			if in.IsNull() {
				in.Skip()
				out.PriceHistory = nil
			} else {
				in.Delim('[')
				if out.PriceHistory == nil {
					if !in.IsDelim(']') {
						out.PriceHistory = make([]*AdvertPrice, 0, 8)
					} else {
						out.PriceHistory = []*AdvertPrice{}
					}
				} else {
					out.PriceHistory = (out.PriceHistory)[:0]
				}
				for !in.IsDelim(']') {
					var v34 *AdvertPrice
					if in.IsNull() {
						in.Skip()
						v34 = nil
					} else {
						if v34 == nil {
							v34 = new(AdvertPrice)
						}
						(*v34).UnmarshalEasyJSON(in)
					}
					out.PriceHistory = append(out.PriceHistory, v34)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "favorite_count":
			out.FavoriteCount = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels16(out *jwriter.Writer, in HttpBodyAdvertDetail) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"advert\":"
		out.RawString(prefix[1:])
		(in.Advert).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"salesman\":"
		out.RawString(prefix)
		easyjsonCd7c0adaEncodeYulaInternalModels3(out, in.Salesman)
	}
	{
		const prefix string = ",\"rating\":"
		out.RawString(prefix)
		easyjsonCd7c0adaEncodeYulaInternalModels4(out, in.Rating)
	}
	{
		const prefix string = ",\"price_history\":"
		out.RawString(prefix)
		if in.PriceHistory == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v35, v36 := range in.PriceHistory {
				if v35 > 0 {
					out.RawByte(',')
				}
				if v36 == nil {
					out.RawString("null")
				} else {
					(*v36).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"favorite_count\":"
		out.RawString(prefix)
		out.Int64(int64(in.FavoriteCount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyAdvertDetail) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyAdvertDetail) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyAdvertDetail) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyAdvertDetail) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels16(l, v)
}
func easyjsonCd7c0adaDecodeYulaInternalModels17(in *jlexer.Lexer, out *HttpBodyAdvert) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "advert":
			(out.Advert).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCd7c0adaEncodeYulaInternalModels17(out *jwriter.Writer, in HttpBodyAdvert) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"advert\":"
		out.RawString(prefix[1:])
		(in.Advert).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HttpBodyAdvert) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCd7c0adaEncodeYulaInternalModels17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HttpBodyAdvert) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCd7c0adaEncodeYulaInternalModels17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HttpBodyAdvert) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCd7c0adaDecodeYulaInternalModels17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HttpBodyAdvert) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCd7c0adaDecodeYulaInternalModels17(l, v)
}
