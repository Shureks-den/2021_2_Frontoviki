// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "yula/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// SearchUsecase is an autogenerated mock type for the SearchUsecase type
type SearchUsecase struct {
	mock.Mock
}

// SearchWithFilter provides a mock function with given fields: query, page
func (_m *SearchUsecase) SearchWithFilter(query *models.SearchFilter, page *models.Page) ([]*models.Advert, error) {
	ret := _m.Called(query, page)

	var r0 []*models.Advert
	if rf, ok := ret.Get(0).(func(*models.SearchFilter, *models.Page) []*models.Advert); ok {
		r0 = rf(query, page)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Advert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.SearchFilter, *models.Page) error); ok {
		r1 = rf(query, page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
