// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "yula/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// SearchRepository is an autogenerated mock type for the SearchRepository type
type SearchRepository struct {
	mock.Mock
}

// SelectWithFilter provides a mock function with given fields: _a0, from, count
func (_m *SearchRepository) SelectWithFilter(_a0 *models.SearchFilter, from int64, count int64) ([]*models.Advert, error) {
	ret := _m.Called(_a0, from, count)

	var r0 []*models.Advert
	if rf, ok := ret.Get(0).(func(*models.SearchFilter, int64, int64) []*models.Advert); ok {
		r0 = rf(_a0, from, count)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Advert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.SearchFilter, int64, int64) error); ok {
		r1 = rf(_a0, from, count)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
